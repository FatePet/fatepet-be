name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 push 될 때마다 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout source code
        uses: actions/checkout@v3

      - name: 🔐 Connect to EC2 and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 디렉토리 없으면 생성
            mkdir -p /home/ubuntu/fatepet
            cd /home/ubuntu/fatepet

            # 기존 프로젝트 삭제
            rm -rf *

            # GitHub에서 최신 코드 clone (Personal Access Token 사용 필요 없음, GitHub Actions에서 직접 복사됨)
            # 대신 현재 워크스페이스의 코드 동기화
            echo "🚀 Pulling latest code via rsync"
            rsync -avz --delete ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/fatepet

            # Docker Compose 실행
            echo "🐳 Running Docker Compose"
            cd /home/ubuntu/fatepet
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d --build
